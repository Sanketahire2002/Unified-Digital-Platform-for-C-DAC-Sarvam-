// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sarvam.Data;

#nullable disable

namespace Sarvam.Migrations.SyllabusDb
{
    [DbContext(typeof(SyllabusDbContext))]
    partial class SyllabusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MasterResult", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("result_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ResultId"));

                    b.Property<int?>("Ccee60")
                        .HasColumnType("int")
                        .HasColumnName("ccee_60");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("Internals20")
                        .HasColumnType("int")
                        .HasColumnName("internals_20");

                    b.Property<int?>("Lab40")
                        .HasColumnType("int")
                        .HasColumnName("lab_40");

                    b.Property<int?>("MasterModuleModuleId")
                        .HasColumnType("int");

                    b.Property<long?>("MasterProfilePRN")
                        .HasColumnType("bigint");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<long>("PRN")
                        .HasColumnType("bigint")
                        .HasColumnName("PRN");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("ResultId");

                    b.HasIndex("MasterModuleModuleId");

                    b.HasIndex("MasterProfilePRN");

                    b.HasIndex("ModuleId");

                    b.HasIndex("PRN");

                    b.ToTable("MasterResults");
                });

            modelBuilder.Entity("Sarvam.Models.MasterModule", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ModuleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("DurationHours")
                        .HasColumnType("tinyint unsigned");

                    b.Property<long>("InstructorId")
                        .HasColumnType("bigint");

                    b.Property<long>("MoCoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModuleEndDate")
                        .HasColumnType("date");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModuleStartDate")
                        .HasColumnType("date");

                    b.Property<byte>("NoOfDays")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ModuleId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("MoCoId");

                    b.ToTable("MasterModules");
                });

            modelBuilder.Entity("Sarvam.Models.MasterModuleSubpoint", b =>
                {
                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SubId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("ModuleSubpointName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SubId");

                    b.HasIndex("ModuleId");

                    b.ToTable("MasterModuleSubpoints");
                });

            modelBuilder.Entity("Sarvam.Models.MasterProfile", b =>
                {
                    b.Property<long>("PRN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PRN");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("PRN"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("Student")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("PRN");

                    b.ToTable("master_profiles");
                });

            modelBuilder.Entity("Sarvam.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MasterModuleModuleId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Option1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Option2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Option3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Option4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("QuestionId");

                    b.HasIndex("MasterModuleModuleId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Sarvam.Models.QuizDetails", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Marks")
                        .HasColumnType("int");

                    b.Property<string>("QuizTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("QuizId");

                    b.ToTable("QuizDetails");
                });

            modelBuilder.Entity("Sarvam.Models.QuizResults", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ResultId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ObtainedMarks")
                        .HasColumnType("int");

                    b.Property<long>("PRN")
                        .HasColumnType("bigint");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("Quiz_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ResultId");

                    b.HasIndex("PRN");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizResults");
                });

            modelBuilder.Entity("MasterResult", b =>
                {
                    b.HasOne("Sarvam.Models.MasterModule", null)
                        .WithMany("MasterResults")
                        .HasForeignKey("MasterModuleModuleId");

                    b.HasOne("Sarvam.Models.MasterProfile", null)
                        .WithMany("MasterResults")
                        .HasForeignKey("MasterProfilePRN");

                    b.HasOne("Sarvam.Models.MasterModule", "MasterModule")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sarvam.Models.MasterProfile", "MasterProfile")
                        .WithMany()
                        .HasForeignKey("PRN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasterModule");

                    b.Navigation("MasterProfile");
                });

            modelBuilder.Entity("Sarvam.Models.MasterModule", b =>
                {
                    b.HasOne("Sarvam.Models.MasterProfile", "Instructor")
                        .WithMany("MasterModules")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sarvam.Models.MasterProfile", "MoCo")
                        .WithMany("MoCoModules")
                        .HasForeignKey("MoCoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("MoCo");
                });

            modelBuilder.Entity("Sarvam.Models.MasterModuleSubpoint", b =>
                {
                    b.HasOne("Sarvam.Models.MasterModule", "MasterModule")
                        .WithMany("MasterModuleSubpoints")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasterModule");
                });

            modelBuilder.Entity("Sarvam.Models.Question", b =>
                {
                    b.HasOne("Sarvam.Models.MasterModule", null)
                        .WithMany("Questions")
                        .HasForeignKey("MasterModuleModuleId");
                });

            modelBuilder.Entity("Sarvam.Models.QuizResults", b =>
                {
                    b.HasOne("Sarvam.Models.MasterProfile", "MasterProfile")
                        .WithMany("QuizResults")
                        .HasForeignKey("PRN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sarvam.Models.QuizDetails", "QuizDetails")
                        .WithMany("QuizResults")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasterProfile");

                    b.Navigation("QuizDetails");
                });

            modelBuilder.Entity("Sarvam.Models.MasterModule", b =>
                {
                    b.Navigation("MasterModuleSubpoints");

                    b.Navigation("MasterResults");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Sarvam.Models.MasterProfile", b =>
                {
                    b.Navigation("MasterModules");

                    b.Navigation("MasterResults");

                    b.Navigation("MoCoModules");

                    b.Navigation("QuizResults");
                });

            modelBuilder.Entity("Sarvam.Models.QuizDetails", b =>
                {
                    b.Navigation("QuizResults");
                });
#pragma warning restore 612, 618
        }
    }
}
